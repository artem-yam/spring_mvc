-- BOOKS
CREATE TABLE "BOOKS" 
   ("ID" NUMBER(*,0) GENERATED ALWAYS AS IDENTITY ,
	"TITLE" VARCHAR2(50 BYTE) NOT NULL, 
	"AUTHOR" VARCHAR2(50 BYTE) NOT NULL, 
	"IMAGE" BLOB, 
	"RATING" NUMBER DEFAULT 0, 
	"IS_DELETED" NUMBER(1,0) DEFAULT 0
   )
CREATE UNIQUE INDEX "BOOKS_PK" ON "BOOKS" ("ID");
ALTER TABLE "BOOKS" ADD CONSTRAINT "BOOKS_PK" PRIMARY KEY ("ID");

   
INSERT INTO BOOKS (TITLE,AUTHOR,RATING,IS_DELETED) VALUES ('default image','default image','0','1');
INSERT INTO BOOKS (TITLE,AUTHOR,RATING,IS_DELETED) VALUES ('Fight Club','Chuck Palahniuk','0','1');
INSERT INTO BOOKS (TITLE,AUTHOR,RATING,IS_DELETED) VALUES ('The Trial','Franz Kafka','0','1');
INSERT INTO BOOKS (TITLE,AUTHOR,RATING,IS_DELETED) VALUES ('Jewels of Nizam','Geeta Devi','5','0');
INSERT INTO BOOKS (TITLE,AUTHOR,RATING,IS_DELETED) VALUES ('Cakes & Bakes','Sanjeev Kapoor','5','0');
INSERT INTO BOOKS (TITLE,AUTHOR,RATING,IS_DELETED) VALUES ('Jamie''s Kitchen','Jamie Oliver','4','0');
INSERT INTO BOOKS (TITLE,AUTHOR,RATING,IS_DELETED) VALUES ('Inexpensive Family Meals','Simon Holst','3','0');
INSERT INTO BOOKS (TITLE,AUTHOR,RATING,IS_DELETED) VALUES ('Paleo Slow Cooking','Chrissy Gawer','1','0');
INSERT INTO BOOKS (TITLE,AUTHOR,RATING,IS_DELETED) VALUES ('Cook Like an Italian','Toble Puttock','3','0');
INSERT INTO BOOKS (TITLE,AUTHOR,RATING,IS_DELETED) VALUES ('Suneeta Vaswani','Geeta Devi','5','0');
INSERT INTO BOOKS (TITLE,AUTHOR,RATING,IS_DELETED) VALUES ('Jamie Does','Jamie Oliver','3','0');
INSERT INTO BOOKS (TITLE,AUTHOR,RATING,IS_DELETED) VALUES ('Jamie''s Italy','Jamie Oliver','5','0');
INSERT INTO BOOKS (TITLE,AUTHOR,RATING,IS_DELETED) VALUES ('Vegetables Cookbook','Matthew Biggs','3','0');


-- TAGS
CREATE TABLE "AVAILABLE_TAGS" 
   ("ID" NUMBER(*,0) GENERATED ALWAYS AS IDENTITY, 
	"TAG" VARCHAR2(50 BYTE) NOT NULL
   ) 
CREATE UNIQUE INDEX "TAGS_PK" ON "AVAILABLE_TAGS" ("ID");
CREATE UNIQUE INDEX "TAGS_TEXT" ON "AVAILABLE_TAGS" ("TAG");
ALTER TABLE "AVAILABLE_TAGS" ADD CONSTRAINT "TAGS_PK" PRIMARY KEY ("ID");

INSERT INTO AVAILABLE_TAGS (TAG) VALUES ('Must Read Titles');
INSERT INTO AVAILABLE_TAGS (TAG) VALUES ('Best Of List');
INSERT INTO AVAILABLE_TAGS (TAG) VALUES ('Classic Novels');
INSERT INTO AVAILABLE_TAGS (TAG) VALUES ('Non Fiction');

-- BOOKS AND TAGS
CREATE TABLE "BOOK_TAGS" 
   ("BOOK" NUMBER(*,0) NOT NULL, 
	"TAG" NUMBER(*,0) NOT NULL
   ) 
ALTER TABLE "BOOK_TAGS" ADD CONSTRAINT "BOOK_TAGS_BOOKS_ID_FK" FOREIGN KEY ("BOOK")
	  REFERENCES "BOOKS" ("ID");
ALTER TABLE "BOOK_TAGS" ADD CONSTRAINT "BOOK_TAGS_TAGS_ID_FK" FOREIGN KEY ("TAG")
	  REFERENCES "AVAILABLE_TAGS" ("ID");
      
-- NOTIFICATION TYPES
CREATE TABLE "NOTIFICATION_TYPES" 
   ("ID" NUMBER(*,0) GENERATED ALWAYS AS IDENTITY,
	"TYPE" VARCHAR2(50 BYTE) NOT NULL
   ) 
CREATE UNIQUE INDEX "NOTIFICATION_TYPES_PK" ON "NOTIFICATION_TYPES" ("ID");
ALTER TABLE "NOTIFICATION_TYPES" ADD CONSTRAINT "NOTIFICATION_TYPES_PK" PRIMARY KEY ("ID");
   
INSERT INTO NOTIFICATION_TYPES (TYPE) VALUES ('ADD_BOOK');
INSERT INTO NOTIFICATION_TYPES (TYPE) VALUES ('SEARCH');
INSERT INTO NOTIFICATION_TYPES (TYPE) VALUES ('RATING');

-- NOTIFICATIONS
CREATE TABLE "NOTIFICATIONS" 
   ("ID" NUMBER(*,0) GENERATED ALWAYS AS IDENTITY, 
	"BOOK" NUMBER(*,0), 
	"CONTENT" VARCHAR2(50 BYTE), 
	"CATEGORY" VARCHAR2(50 BYTE), 
	"TYPE" VARCHAR2(50 BYTE), 
	"DATE" DATE DEFAULT sysdate
   ) 
CREATE UNIQUE INDEX "NOTIFICATIONS_PK" ON "NOTIFICATIONS" ("ID");
ALTER TABLE "NOTIFICATIONS" ADD CONSTRAINT "NOTIFICATIONS_PK" PRIMARY KEY ("ID");
ALTER TABLE "NOTIFICATIONS" ADD CONSTRAINT "NOTIFICATIONS_BOOKS__FK" FOREIGN KEY ("BOOK")
	  REFERENCES "BOOKS" ("ID");
   
INSERT INTO NOTIFICATIONS (BOOK,CONTENT,CATEGORY,TYPE,"DATE") VALUES (1,null,'Must Read Titles','1',to_date('01.01.19','DD.MM.RR'));
INSERT INTO NOTIFICATIONS (BOOK,CONTENT,CATEGORY,TYPE,"DATE") VALUES (2,null,'Must Read Titles','1',to_date('01.01.19','DD.MM.RR'));

-- USERS
CREATE TABLE "USERS" 
   ("LOGIN" VARCHAR2(50 BYTE) NOT NULL, 
	"PASSWORD" VARCHAR2(50 BYTE) NOT NULL
   )
CREATE UNIQUE INDEX "USERS_PK" ON "USERS" ("LOGIN");
ALTER TABLE "USERS" ADD CONSTRAINT "USERS_PK" PRIMARY KEY ("LOGIN");
   
INSERT INTO "USERS" (LOGIN,PASSWORD) VALUES ('login1','pass1');


